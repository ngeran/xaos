/**
 * File Path: src/plugins/AppLayout/components/maincontent.css
 * Version: 3.1.1
 * Description: Elegant and spacious styles for the MainContent area,
 *              fully integrated with the application's global theme variables.
 */

/* ================================================
   MAIN CONTENT WRAPPER
   ================================================ */
.app-main-content {
  margin-top: 2.5rem;
  padding: 3rem 2rem;
  /* Use dark-surface for content background, adapts to light/dark/yellow */
  background: var(--dark-surface);
  color: var(--text-primary);
  /* Account for navbar height in min-height calculation */
  min-height: calc(100vh - var(--nav-height, 72px) - 1px); /* 1px for hero border */
  transition: var(--transition); /* Use global transition variable */
}

.app-main-inner {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 1rem;
}

/* ================================================
   TYPOGRAPHY (Defaults for contained text)
   ================================================ */
.app-main-content h1 {
  font-size: 2rem;
  font-weight: 600;
  color: var(--text-primary);
  letter-spacing: -0.01em;
}

.app-main-content h2 {
  font-size: 1rem;
  font-weight: 500;
  margin-top: 2.5rem;
  margin-bottom: 1rem;
  color: var(--text-primary);
  /* Use a lighter border-color variant for subtle separators */
  border-bottom: 1px solid rgba(var(--text-primary-rgb, 255,255,255), 0.08); /* Fallback for older browsers */
  padding-bottom: 0.5rem;
}

/* To make `rgba(var(--text-primary-rgb, 255,255,255), 0.08)` work, you would need to define `--text-primary-rgb` in your `:root` and theme selectors.
   For example, in `:root` (dark): `--text-primary-rgb: 255,255,255;`
   In `[data-theme="light"]`: `--text-primary-rgb: 0,0,0;`
   In `[data-theme="yellow"]`: `--text-primary-rgb: 254,252,232;` (rgb of #fefce8)
   Alternatively, you can just use `var(--border-color)` if you prefer a consistent, more prominent border across all elements.
   I've kept `rgba(var(--text-primary-rgb, ...), 0.08)` for a softer, context-aware border, but be aware of the extra var definition needed.
*/


.app-main-content h3 {
  font-size: 1.5rem;
  font-weight: 500;
  margin-top: 2rem;
  margin-bottom: 0.8rem;
  color: var(--text-primary);
}

.app-main-content h4 {
  font-size: 1.25rem;
  font-weight: 500;
  margin-top: 1.5rem;
  margin-bottom: 0.6rem;
  color: var(--text-primary);
}

.app-main-content p {
  color: var(--text-secondary);
  line-height: 1.7;
  margin-bottom: 1rem;
}

.app-main-content ul,
.app-main-content ol {
  color: var(--text-secondary);
  line-height: 1.6;
  margin-bottom: 1rem;
  padding-left: 1.5rem;
}

.app-main-content li {
  margin-bottom: 0.5rem;
}

/* Add a subtle focus style for interactive elements */
.app-main-content a {
  color: var(--primary-color); /* Use your primary accent color for links */
  text-decoration: none;
  transition: var(--transition); /* Use global transition */
}

.app-main-content a:hover {
  color: var(--secondary-color); /* Use secondary color for hover effect */
  text-decoration: underline;
}

/* ================================================
   RESPONSIVE DESIGN
   ================================================ */
@media (max-width: 992px) {
  .app-main-content {
    padding: 2.5rem 1.5rem;
  }
  .app-main-inner {
    padding: 0 0.8rem;
  }
}

@media (max-width: 768px) {
  .app-main-content {
    padding: 2rem 1rem;
  }
  .app-main-content h1 {
    font-size: 1.8rem;
  }
  .app-main-content h2 {
    font-size: 1.5rem;
    margin-top: 2rem;
  }
  .app-main-content h3 {
    font-size: 1.3rem;
  }
  .app-main-content h4 {
    font-size: 1.1rem;
  }
}

@media (max-width: 480px) {
  .app-main-content {
    padding: 1.5rem 0.8rem;
  }
}
