# File Path: xaos/packages/frontend/docker-compose.yml
# Version: 1.2.1
#
# Description:
# Updated Docker Compose configuration for Rust backend and Python runner.
# Build context now includes backend and shared folders for successful COPY.
# Removed ./xaospy:/xaospy volume mount for python_runner to prevent overriding
# copied files from Dockerfile, ensuring scripts/backup_and_restore is included.
# Explicitly set vlabs-net as an external network to use the existing network
# created with `docker network create vlabs-net`. Added health check for python_runner.
#
# Usage Guide:
# docker compose up -d --build
# docker compose logs -f rust_backend

services:
  # =============================================================================
  # RUST BACKEND SERVICE
  # =============================================================================
  rust_backend:
    container_name: rust_backend
    build:
      context: ../.. # <-- context now includes backend/ and shared/
      dockerfile: packages/backend/Dockerfile
    ports:
      - "3010:3001"
    volumes:
      # Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Map the shared data directory
      - ./../../packages/shared:/app/shared:ro
    environment:
      RUST_LOG: "debug,rust_backend=debug"
      HOST_PROJECT_ROOT: "${PROJECT_ROOT}"
    depends_on:
      python_runner:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - vlabs-net

  # =============================================================================
  # PYTHON RUNNER SERVICE
  # =============================================================================
  python_runner:
    container_name: python_runner
    image: python-runner
    build:
      context: ./xaospy
      dockerfile: Dockerfile
    command: uvicorn api:app --host 0.0.0.0 --port 8000
    volumes:
      # Map the shared data directory
      - ./../../packages/shared:/shared
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - vlabs-net
    restart: unless-stopped

networks:
  vlabs-net:
    external: true
    name: vlabs-net
